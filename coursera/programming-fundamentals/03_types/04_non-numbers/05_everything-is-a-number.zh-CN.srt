1
00:00:02,831 --> 00:00:07,406
你刚刚读到所有事物都是数字，但让我们看看这个原则

2
00:00:07,406 --> 00:00:11,392
如何适用于一些乍一看可能不像数字的东西。

3
00:00:11,392 --> 00:00:12,906
字符串是数字，

4
00:00:12,906 --> 00:00:18,096
你以前见过字面上的字符序列，比如 Hello World！

5
00:00:18,096 --> 00:00:21,680
但是你有没有想过电脑是如何将它们存储为数字的？

6
00:00:21,680 --> 00:00:25,260
每个字符都会占用计算机的部分内存。

7
00:00:25,260 --> 00:00:27,790
稍后我们将具体讨论多少，这样

8
00:00:27,790 --> 00:00:30,250
你就可以在一个盒子里从概念上考虑每个角色。

9
00:00:31,330 --> 00:00:36,320
但是，就硬件而言，计算机将每个字符存储为一个数字。

10
00:00:36,320 --> 00:00:40,110
您可以在 ASCII

11
00:00:40,110 --> 00:00:44,900
表中查找不同字符的十进制或十六进制值，也可以在此处查看这些特定字符的十进制值。

12
00:00:44,900 --> 00:00:48,050
当然，计算机会将它们存储为二进制数。

13
00:00:48,050 --> 00:00:51,620
计算机将字母存储为数字的一个有趣结果

14
00:00:51,620 --> 00:00:53,270
是，我们可以对它们进行数学运算。

15
00:00:53,270 --> 00:00:57,250
这一原则是大多数现代密码学方法的基础。起@@

16
00:00:58,670 --> 00:01:02,780
初可能看起来不是数字的另一件事是一张图像，

17
00:01:02,780 --> 00:01:04,670
比如一些花中的一张。

18
00:01:04,670 --> 00:01:08,410
该图像由大约一百万个像素

19
00:01:08,410 --> 00:01:12,310
组成，每个像素都用数字表示图像中的颜色。

20
00:01:12,310 --> 00:01:16,970
要查看这些像素，让我们放大图像的这一小部分。

21
00:01:16,970 --> 00:01:20,970
在这里，您可以看到图像被放大了几倍。

22
00:01:20,970 --> 00:01:24,470
你可以看到这张图片看起来像块状或像素化。

23
00:01:24,470 --> 00:01:28,660
如果你能仔细观察，这就是图像的实际样子。

24
00:01:28,660 --> 00:01:30,390
请注意，如果你自己尝试一下，

25
00:01:30,390 --> 00:01:33,540
你最终可能会得到像这样看起来更流畅的东西。

26
00:01:33,540 --> 00:01:37,440
当你

27
00:01:37,440 --> 00:01:38,730
放大图像时，大多数图像软件都会应用算法来平滑像素化。

28
00:01:38,730 --> 00:01:41,551
你必须将其关闭才能看到原始像素。

29
00:01:41,551 --> 00:01:46,140
让我们回到放大的图像，它可以更清晰地显示原始像素。

30
00:01:46,140 --> 00:01:50,691
如果我们只看这张图像的子集，然后把它放得更远，

31
00:01:50,691 --> 00:01:54,699
我们就能更容易地看到和谈论各个像素。

32
00:01:54,699 --> 00:01:58,688
以下是原始图像的16个像素，大约有100万个像素，

33
00:01:58,688 --> 00:02:02,360
只是为了让你大致了解我们现在放大了多少。

34
00:02:02,360 --> 00:02:07,140
此深紫色像素的红色值为 55，绿色值为 27

35
00:02:07,140 --> 00:02:09,730
，蓝色值为 75。

36
00:02:09,730 --> 00:02:14,840
同时，这个金色像素具有截然不同的RGB值，分别

37
00:02:14,840 --> 00:02:18,450
为166、136和41，因此它的颜色完全不同。

38
00:02:20,480 --> 00:02:24,170
声音是计算机处理的另一件重要事情。

39
00:02:24,170 --> 00:02:27,520
在我说话的时候，你可以看到我所说的话的波形。

40
00:02:27,520 --> 00:02:31,570
计算机将它们编码为数字，然后将其发送到声音硬件，声音硬件

41
00:02:31,570 --> 00:02:36,970
使用它们来确定如何移动扬声器以产生所需的声音。

42
00:02:36,970 --> 00:02:40,590
您可能还需要表示和计算许多其他类型的数据。

43
00:02:40,590 --> 00:02:44,380
你将在课程 3 中学习由序列形成的数据。

44
00:02:44,380 --> 00:02:47,235
现在，你将学习结构和类型定义。