在本视频中，我们将逐步介绍在 以下问题的背景下设计算法的过程。 这里我们有一个 16x16 的网格，我们想画一个 位于特定起点 x, y 位置的特定高度和宽度的蓝色矩形。 因此，首先，我们只看一下这个问题的一个具体实例。 假设起点应该有 x 和 y 坐标 (7,9)。 矩形的宽度应为 8，矩形的高度应为 4。 现在，为了举一个问题实例， 我们要看看我们的起点，然后简单地画出那个矩形。 你可以假设你有一支蓝笔， 你只想按照指定的问题画这个矩形。 现在我们需要退后一步，写下我们刚才所做的事情。 我们做的第一件事是从点（7,9）开始， 画一条长度为8的水平线。 接下来，我们画另一条长度为 8 的水平线，从 (7,10) 开始。 第三条水平线，起点高一点。 最后，第四条水平线从 (7,12) 开始。 让我们离开绘图， 看看我们写出的实际线条，描述我们的所作所为。 你会注意到这是一个非常重复的过程。 这四个步骤中唯一的区别是 y 坐标。 y 坐标从 9 开始，在 12 处停止。 我们之所以从 9 开始，是因为这是 矩形的起始 y 坐标。 我们之所以在 12 点停下来，是因为我们有兴趣画一个矩形，但 高度为 4。 因此，我们将画四条水平线，停在 y + height-1 处。 现在，我们已经检查了这四个步骤， 让我们尝试编写一个可以概括它们的算法。 回想一下，我们从 y 向上计数到 y + 高度值。 现在，这实际上是 y + 的专有高度，因为我们数了 9、10、11、12。 实际上，我们并没有一路走到 13，也就是 y+height。 我们要把这个数字叫做 i，然后对于每个值，我们 要画一条长度为 8 的水平线，从坐标 (7, i) 开始。 我们为什么要画一条长度为 8 的线？ 那是因为它是矩形的宽度。 因此，我们可以继续调用这个宽度。 这样，我们将能够使用我们的算法来处理 不同大小的矩形。 为什么我们要从 x 位置 7 开始？ 因为那是我们的起点 x 坐标。 所以我们可以称之为 x。 这样我们的算法就可以容纳 x 的所有值。 现在这部分看起来有点复杂。 我们将画一条长度为宽度的水平线，从 (x, i) 开始。 这个步骤看起来有点复杂实际上是可以的。 我们称之为不同的编程问题。 我们假设我们要么已经知道如何 画一条长度为 (x, i) 的水平线。 或者我们可以把它当作自己的编程问题来解决， 从第 1 步到第 4 步重新开始。 在本练习中，我们假设我们知道如何执行此步骤。 我们要做的最后一件事就是增加一点精度， 因为我们希望线条是蓝色的。 因此，我们的算法需要特别说明我们正在画一条长度为 宽度的蓝线，从位置 (x, i) 开始。 亲自测试这个算法。 给自己一个 你想要测试的 x、y、宽度和高度的值，看看这是否适合你。 最后一点，x、y、宽度和 高度的某些值会导致你画出网格。 在这种情况下，我们将假设没有发生任何特别 的事情，并且对此不采取任何措施是理想的行为。 稍后我们将探讨以 更复杂的方式处理错误和极端情况的方法。