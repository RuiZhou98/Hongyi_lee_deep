1
00:00:02,510 --> 00:00:05,810
In this video, we will develop an algorithm for

2
00:00:05,810 --> 00:00:09,070
a particular pattern of blue and red squares on a grid.

3
00:00:09,070 --> 00:00:10,670
We're going to start with step one,

4
00:00:10,670 --> 00:00:12,680
doing an instance of the problem.

5
00:00:12,680 --> 00:00:15,515
And in this instance, I picked N equals three.

6
00:00:15,515 --> 00:00:17,960
So the first thing I'm going to do is work the problem by

7
00:00:17,960 --> 00:00:21,095
hand without really thinking through exactly what I'm doing.

8
00:00:21,095 --> 00:00:22,980
That is, I'm going to do it right,

9
00:00:22,980 --> 00:00:26,285
but I'm not going to try to write down what I did.

10
00:00:26,285 --> 00:00:29,720
Once I've done that, I'm going to do step two where I

11
00:00:29,720 --> 00:00:33,495
write down exactly what I did in a step-by-step fashion.

12
00:00:33,495 --> 00:00:36,815
The first thing I did was put a blue square at zero, zero.

13
00:00:36,815 --> 00:00:38,220
Then I put a red square at zero, one,

14
00:00:38,220 --> 00:00:40,670
another red square at zero,

15
00:00:40,670 --> 00:00:42,185
two, a blue square at zero,

16
00:00:42,185 --> 00:00:44,075
three, a red square at one,

17
00:00:44,075 --> 00:00:45,760
one, blue at one,

18
00:00:45,760 --> 00:00:47,652
two, red at one, three,

19
00:00:47,652 --> 00:00:49,700
red at two, two, red at two,

20
00:00:49,700 --> 00:00:52,735
three, and finally a blue at three, three.

21
00:00:52,735 --> 00:00:54,885
Now I'd like to generalize these steps,

22
00:00:54,885 --> 00:00:56,675
step three of the programming process.

23
00:00:56,675 --> 00:00:58,085
And if we look at the steps,

24
00:00:58,085 --> 00:01:00,800
we can see there's some repetition and counting behavior,

25
00:01:00,800 --> 00:01:04,675
which is going to help us generalize these steps into an algorithm.

26
00:01:04,675 --> 00:01:07,465
These first four steps have x equals zero,

27
00:01:07,465 --> 00:01:10,150
then we have a group of three steps for x equals one,

28
00:01:10,150 --> 00:01:12,635
a group of two steps for x equals two,

29
00:01:12,635 --> 00:01:14,990
and finally a single step for x equals three.

30
00:01:14,990 --> 00:01:19,755
So we're repeating somewhat similar steps as we count x going from zero to three.

31
00:01:19,755 --> 00:01:21,425
But exactly what we do varies.

32
00:01:21,425 --> 00:01:23,990
We color the squares blue, red, red,

33
00:01:23,990 --> 00:01:26,465
blue for x equals zero or red, blue,

34
00:01:26,465 --> 00:01:27,650
red for x equals one,

35
00:01:27,650 --> 00:01:30,335
so the color pattern is something we still have to figure out.

36
00:01:30,335 --> 00:01:33,610
Also, how many steps in the y coordinate of each varies.

37
00:01:33,610 --> 00:01:35,345
Let's look at the y coordinates first,

38
00:01:35,345 --> 00:01:37,465
coming back to the colors in a minute.

39
00:01:37,465 --> 00:01:39,275
If we look at this first group of steps,

40
00:01:39,275 --> 00:01:42,540
we see that the y coordinates go from zero to three.

41
00:01:42,540 --> 00:01:44,405
If we look at the second group of steps,

42
00:01:44,405 --> 00:01:47,415
we see that the y coordinates go from one to three,

43
00:01:47,415 --> 00:01:49,755
and in this third group, two to three.

44
00:01:49,755 --> 00:01:51,215
So it looks like, in general,

45
00:01:51,215 --> 00:01:53,690
we're counting from x to three.

46
00:01:53,690 --> 00:01:55,745
If we ignore the colors for a moment,

47
00:01:55,745 --> 00:01:58,170
we can take this group of steps and say,

48
00:01:58,170 --> 00:01:59,570
we count from zero to three,

49
00:01:59,570 --> 00:02:01,520
calling the number that we count y,

50
00:02:01,520 --> 00:02:05,255
then put a square of some color we'll figure out later at zero, y.

51
00:02:05,255 --> 00:02:08,810
And we can write similar steps for each of these other groups.

52
00:02:08,810 --> 00:02:13,405
And now we can use patterns in these steps to generalize our algorithm further.

53
00:02:13,405 --> 00:02:17,945
Each set of steps is the same except for the x coordinate shown in bold,

54
00:02:17,945 --> 00:02:20,894
and these vary in a nice counting pattern.

55
00:02:20,894 --> 00:02:23,690
That is, we can say count from zero to three,

56
00:02:23,690 --> 00:02:25,370
call each number that we count x,

57
00:02:25,370 --> 00:02:26,870
and for each of those numbers,

58
00:02:26,870 --> 00:02:29,870
we'll count from x to three and call that y,

59
00:02:29,870 --> 00:02:32,740
and we'll put some color square at x, y.

60
00:02:32,740 --> 00:02:35,370
But this is only true for N equals three.

61
00:02:35,370 --> 00:02:37,580
A clue that we have not finished generalizing

62
00:02:37,580 --> 00:02:40,220
is that the steps do not depend on N at all.

63
00:02:40,220 --> 00:02:42,685
We know that the pattern will be different for different N,

64
00:02:42,685 --> 00:02:45,745
but this is not reflected in the algorithm we wrote.

65
00:02:45,745 --> 00:02:47,390
We need to make it more general.

66
00:02:47,390 --> 00:02:48,775
How could we do this?

67
00:02:48,775 --> 00:02:50,390
We might just realize it,

68
00:02:50,390 --> 00:02:54,155
but if we don't, we can go back and repeat steps one and two.

69
00:02:54,155 --> 00:02:55,790
If the pattern is hard to figure out,

70
00:02:55,790 --> 00:02:59,190
we may have to do steps one and two many times.

71
00:02:59,190 --> 00:03:03,380
So for example, if we went back and performed step one for N equals one,

72
00:03:03,380 --> 00:03:05,105
we end up with this pattern.

73
00:03:05,105 --> 00:03:07,310
And when we do step two,

74
00:03:07,310 --> 00:03:10,100
we write down these steps.

75
00:03:10,100 --> 00:03:12,635
If we go through the generalization process again,

76
00:03:12,635 --> 00:03:14,870
we see that we come up with these steps.

77
00:03:14,870 --> 00:03:16,460
Count from zero to one,

78
00:03:16,460 --> 00:03:19,800
call it x; count from x to one, call it y;

79
00:03:19,800 --> 00:03:22,280
then put a square of some color at x, y,

80
00:03:22,280 --> 00:03:26,750
which is very similar to N equals three except this number has changed.

81
00:03:26,750 --> 00:03:30,950
For any N, we count from zero to N based on the pattern from our examples.

82
00:03:30,950 --> 00:03:33,500
Now we have a more generalized algorithm.

83
00:03:33,500 --> 00:03:37,760
Of course, we need to figure out what the question marks are for the colors.

84
00:03:37,760 --> 00:03:42,810
To do that, we can go back to the colors from our N equals three example.

85
00:03:42,810 --> 00:03:45,602
We had mostly red squares with some blue squares,

86
00:03:45,602 --> 00:03:49,360
so we should figure out the pattern for when a square is blue.

87
00:03:49,360 --> 00:03:54,690
I've thrown away the red ones so we can just look at blue for a pattern.

88
00:03:54,690 --> 00:03:58,910
This pattern may be a bit subtle to see with only four pieces of information.

89
00:03:58,910 --> 00:04:00,485
You may have figured it out,

90
00:04:00,485 --> 00:04:02,520
but if not, what could you do?

91
00:04:02,520 --> 00:04:06,110
Well, it might be easier to see with more information.

92
00:04:06,110 --> 00:04:08,290
Looking at N equals five,

93
00:04:08,290 --> 00:04:10,880
we have more blue squares to consider.

94
00:04:10,880 --> 00:04:13,460
Now, you look at the pattern and see what you come up with,

95
00:04:13,460 --> 00:04:17,900
and this is mostly your ability to look at numbers and find patterns.

96
00:04:17,900 --> 00:04:20,435
If we add the x and y coordinates together,

97
00:04:20,435 --> 00:04:22,820
we see that they are zero, three,

98
00:04:22,820 --> 00:04:25,560
three, six, six, six, and nine.

99
00:04:25,560 --> 00:04:28,010
So the pattern here, is we draw a blue square if

100
00:04:28,010 --> 00:04:31,130
and only if x plus y is a multiple of three.

101
00:04:31,130 --> 00:04:35,630
Now we can go back to our algorithm and specify if x plus y is a multiple of three,

102
00:04:35,630 --> 00:04:37,575
we put a blue square at x, y.

103
00:04:37,575 --> 00:04:39,890
Otherwise, we put a red square at x, y.

104
00:04:39,890 --> 00:04:41,635
This algorithm looks pretty good,

105
00:04:41,635 --> 00:04:43,760
but we will want to do step four and test it,

106
00:04:43,760 --> 00:04:46,000
as shown in the next video.