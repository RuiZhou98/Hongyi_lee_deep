1
00:00:02,510 --> 00:00:05,810
在本视频中，我们将为

2
00:00:05,810 --> 00:00:09,070
网格上蓝色和红色方块的特定图案开发一种算法。

3
00:00:09,070 --> 00:00:10,670
我们将从第一步开始，

4
00:00:10,670 --> 00:00:12,680
举一个问题实例。

5
00:00:12,680 --> 00:00:15,515
在本例中，我选择了 N 等于三。

6
00:00:15,515 --> 00:00:17,960
因此，我要做的第一件事就是

7
00:00:17,960 --> 00:00:21,095
手工解决问题，而不必真正考虑自己在做什么。

8
00:00:21,095 --> 00:00:22,980
也就是说，我会做对的，

9
00:00:22,980 --> 00:00:26,285
但我不会试图写下我的所作所为。

10
00:00:26,285 --> 00:00:29,720
完成后，我将执行第二步，

11
00:00:29,720 --> 00:00:33,495
逐步写下我所做的事情。

12
00:00:33,495 --> 00:00:36,815
我做的第一件事是在零、零处放一个蓝色方块。

13
00:00:36,815 --> 00:00:38,220
然后我把一个红色方块放在零，一个，

14
00:00:38,220 --> 00:00:40,670
另一个红色方块放在零，

15
00:00:40,670 --> 00:00:42,185
二，一个蓝色方块放在零，

16
00:00:42,185 --> 00:00:44,075
三，一个红色方块放在一，一，

17
00:00:44,075 --> 00:00:45,760
蓝色在一，

18
00:00:45,760 --> 00:00:47,652
二，红在一，三，红在二，二，二，

19
00:00:47,652 --> 00:00:49,700
红在二、三，红在二

20
00:00:49,700 --> 00:00:52,735
、三，最后在三、三处放一个蓝色。

21
00:00:52,735 --> 00:00:54,885
现在我想概括一下这些步骤，

22
00:00:54,885 --> 00:00:56,675
即编程过程的第三步。

23
00:00:56,675 --> 00:00:58,085
如果我们看一下这些步骤，

24
00:00:58,085 --> 00:01:00,800
我们可以看到有一些重复和计数行为，

25
00:01:00,800 --> 00:01:04,675
这将有助于我们将这些步骤概括为算法。

26
00:01:04,675 --> 00:01:07,465
前四个步骤的 x 等于零，

27
00:01:07,465 --> 00:01:10,150
然后我们有一组三个步骤表示 x 等于 1，

28
00:01:10,150 --> 00:01:12,635
一组两个步长表示 x 等于二，

29
00:01:12,635 --> 00:01:14,990
最后一个步长表示 x 等于三。

30
00:01:14,990 --> 00:01:19,755
因此，我们在重复一些类似的步骤，因为我们计算x从零到三。

31
00:01:19,755 --> 00:01:21,425
但是我们到底做的事情各不相同。

32
00:01:21,425 --> 00:01:23,990
我们把方块涂成蓝色、红

33
00:01:23,990 --> 00:01:26,465
色、红色、蓝色代表x等于零或者红色、蓝色、

34
00:01:26,465 --> 00:01:27,650
红色代表x等于一，

35
00:01:27,650 --> 00:01:30,335
所以颜色图案是我们仍然需要弄清楚的。

36
00:01:30,335 --> 00:01:33,610
此外，每个 y 坐标中有多少步也各不相同。

37
00:01:33,610 --> 00:01:35,345
让我们先看看 y 坐标，

38
00:01:35,345 --> 00:01:37,465
过一会儿再回到颜色上。

39
00:01:37,465 --> 00:01:39,275
如果我们看一下第一组步骤，就会

40
00:01:39,275 --> 00:01:42,540
看到 y 坐标从零变为三。

41
00:01:42,540 --> 00:01:44,405
如果我们看第二组步骤，

42
00:01:44,405 --> 00:01:47,415
我们会看到 y 坐标从一到三

43
00:01:47,415 --> 00:01:49,755
，在第三组中，从二到三。

44
00:01:49,755 --> 00:01:51,215
所以看来，总的来说，

45
00:01:51,215 --> 00:01:53,690
我们正在从 x 数到 3。

46
00:01:53,690 --> 00:01:55,745
如果我们暂时忽略颜色，

47
00:01:55,745 --> 00:01:58,170
我们可以采取这一组步骤然后说，

48
00:01:58,170 --> 00:01:59,570
我们从零到三计数，

49
00:01:59,570 --> 00:02:01,520
调出我们计数的数字 y，

50
00:02:01,520 --> 00:02:05,255
然后在零处放一个我们稍后会弄清楚的颜色的正方形，y。

51
00:02:05,255 --> 00:02:08,810
我们可以为其他每组写出类似的步骤。

52
00:02:08,810 --> 00:02:13,405
现在我们可以在这些步骤中使用模式来进一步概括我们的算法。除了@@

53
00:02:13,405 --> 00:02:17,945
以粗体显示的 x 坐标外，每组步骤都相同，

54
00:02:17,945 --> 00:02:20,894
而且这些步数各不相同，计数模式不错。

55
00:02:20,894 --> 00:02:23,690
也就是说，我们可以说从零到三计数，

56
00:02:23,690 --> 00:02:25,370
调用我们计算的每个数字 x，

57
00:02:25,370 --> 00:02:26,870
对于每个数字，

58
00:02:26,870 --> 00:02:29,870
我们将从 x 计数到三然后称之为 y，然后在

59
00:02:29,870 --> 00:02:32,740
x，y 处放一些彩色方块。

60
00:02:32,740 --> 00:02:35,370
但这只对于 N 等于三才是正确的。

61
00:02:35,370 --> 00:02:37,580
我们尚未完成概括的一个线索

62
00:02:37,580 --> 00:02:40,220
是，这些步骤根本不依赖于 N。

63
00:02:40,220 --> 00:02:42,685
我们知道不同的 N 的模式会有所不同，

64
00:02:42,685 --> 00:02:45,745
但这并未反映在我们编写的算法中。

65
00:02:45,745 --> 00:02:47,390
我们需要让它更笼统。

66
00:02:47,390 --> 00:02:48,775
我们怎么能做到这一点？

67
00:02:48,775 --> 00:02:50,390
我们可能会意识到这一点，

68
00:02:50,390 --> 00:02:54,155
但如果我们没意识到，我们可以回过头来重复步骤一和二。

69
00:02:54,155 --> 00:02:55,790
如果模式很难弄清楚，

70
00:02:55,790 --> 00:02:59,190
我们可能需要多次执行第一步和第二步。

71
00:02:59,190 --> 00:03:03,380
因此，举个例子，如果我们回过头来执行 N 等于一的步骤，

72
00:03:03,380 --> 00:03:05,105
我们最终会得到这种模式。

73
00:03:05,105 --> 00:03:07,310
当我们执行第二步时，

74
00:03:07,310 --> 00:03:10,100
我们会写下这些步骤。

75
00:03:10,100 --> 00:03:12,635
如果我们再次进行概括过程，

76
00:03:12,635 --> 00:03:14,870
我们会看到我们想出了这些步骤。

77
00:03:14,870 --> 00:03:16,460
从零到一计数，

78
00:03:16,460 --> 00:03:19,800
称之为 x；从 x 计数为一，称之为 y；

79
00:03:19,800 --> 00:03:22,280
然后在 x，y 处放一个某种颜色的正方形，

80
00:03:22,280 --> 00:03:26,750
这与 N 等于三非常相似，只是这个数字发生了变化。

81
00:03:26,750 --> 00:03:30,950
对于任何 N，我们根据示例中的模式从 0 到 N 进行计数。

82
00:03:30,950 --> 00:03:33,500
现在我们有了更通用的算法。

83
00:03:33,500 --> 00:03:37,760
当然，我们需要弄清楚颜色的问号是什么。

84
00:03:37,760 --> 00:03:42,810
为此，我们可以回到我们的 N 等于三个示例中的颜色。

85
00:03:42,810 --> 00:03:45,602
我们主要是红色方块和一些蓝色方块，

86
00:03:45,602 --> 00:03:49,360
所以我们应该弄清楚正方形何时为蓝色的图案。

87
00:03:49,360 --> 00:03:54,690
我把红色的丢掉了这样我们就可以用蓝色来寻找图案了。

88
00:03:54,690 --> 00:03:58,910
只有四条信息，这种模式可能有点微妙。

89
00:03:58,910 --> 00:04:00,485
你可能已经弄清楚了，

90
00:04:00,485 --> 00:04:02,520
但如果没有，你能做什么？

91
00:04:02,520 --> 00:04:06,110
好吧，如果有更多信息，可能会更容易看见。

92
00:04:06,110 --> 00:04:08,290
看着 N 等于五，

93
00:04:08,290 --> 00:04:10,880
我们还有更多的蓝色方块需要考虑。

94
00:04:10,880 --> 00:04:13,460
现在，你看看模式，看看你想出了什么，

95
00:04:13,460 --> 00:04:17,900
这主要是你看数字和找到模式的能力。

96
00:04:17,900 --> 00:04:20,435
如果我们将 x 和 y 坐标相加，

97
00:04:20,435 --> 00:04:22,820
就会发现它们是零、三、

98
00:04:22,820 --> 00:04:25,560
三、六、六、六、六和九。

99
00:04:25,560 --> 00:04:28,010
所以这里的模式是，当

100
00:04:28,010 --> 00:04:31,130
且仅当 x 加 y 是三的倍数时，我们才画一个蓝色方块。

101
00:04:31,130 --> 00:04:35,630
现在我们可以回到我们的算法，指定 x 加 y 是否是三的倍数，

102
00:04:35,630 --> 00:04:37,575
我们在 x, y 处放一个蓝色方块。

103
00:04:37,575 --> 00:04:39,890
否则，我们在 x, y 处放一个红方块。

104
00:04:39,890 --> 00:04:41,635
这个算法看起来不错，

105
00:04:41,635 --> 00:04:43,760
但我们要执行第四步并对其进行测试，

106
00:04:43,760 --> 00:04:46,000
如下一个视频所示。