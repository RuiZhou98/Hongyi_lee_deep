1
00:00:03,630 --> 00:00:07,690
在本视频中，我们将逐步介绍在

2
00:00:07,690 --> 00:00:10,170
以下问题的背景下设计算法的过程。

3
00:00:10,170 --> 00:00:15,388
这里我们有一个 16x16 的网格，我们想画一个

4
00:00:15,388 --> 00:00:21,150
位于特定起点 x, y 位置的特定高度和宽度的蓝色矩形。

5
00:00:21,150 --> 00:00:25,330
因此，首先，我们只看一下这个问题的一个具体实例。

6
00:00:25,330 --> 00:00:29,926
假设起点应该有 x 和 y 坐标 (7,9)。

7
00:00:29,926 --> 00:00:35,520
矩形的宽度应为 8，矩形的高度应为 4。

8
00:00:35,520 --> 00:00:37,890
现在，为了举一个问题实例，

9
00:00:37,890 --> 00:00:42,510
我们要看看我们的起点，然后简单地画出那个矩形。

10
00:00:42,510 --> 00:00:45,170
你可以假设你有一支蓝笔，

11
00:00:45,170 --> 00:00:48,440
你只想按照指定的问题画这个矩形。

12
00:00:50,120 --> 00:00:53,330
现在我们需要退后一步，写下我们刚才所做的事情。

13
00:00:55,350 --> 00:00:58,580
我们做的第一件事是从点（7,9）开始，

14
00:00:58,580 --> 00:01:02,050
画一条长度为8的水平线。

15
00:01:02,050 --> 00:01:07,228
接下来，我们画另一条长度为 8 的水平线，从 (7,10) 开始。

16
00:01:07,228 --> 00:01:10,440
第三条水平线，起点高一点。

17
00:01:10,440 --> 00:01:13,299
最后，第四条水平线从 (7,12) 开始。

18
00:01:13,299 --> 00:01:15,686
让我们离开绘图，

19
00:01:15,686 --> 00:01:20,230
看看我们写出的实际线条，描述我们的所作所为。

20
00:01:21,750 --> 00:01:24,650
你会注意到这是一个非常重复的过程。

21
00:01:24,650 --> 00:01:28,570
这四个步骤中唯一的区别是 y 坐标。

22
00:01:28,570 --> 00:01:32,170
y 坐标从 9 开始，在 12 处停止。

23
00:01:32,170 --> 00:01:35,560
我们之所以从 9 开始，是因为这是

24
00:01:35,560 --> 00:01:37,770
矩形的起始 y 坐标。

25
00:01:37,770 --> 00:01:41,560
我们之所以在 12 点停下来，是因为我们有兴趣画一个矩形，但

26
00:01:41,560 --> 00:01:43,040
高度为 4。

27
00:01:43,040 --> 00:01:48,320
因此，我们将画四条水平线，停在 y + height-1 处。

28
00:01:50,818 --> 00:01:53,040
现在，我们已经检查了这四个步骤，

29
00:01:54,270 --> 00:01:56,770
让我们尝试编写一个可以概括它们的算法。

30
00:01:57,880 --> 00:02:03,030
回想一下，我们从 y 向上计数到 y + 高度值。

31
00:02:03,030 --> 00:02:09,192
现在，这实际上是 y + 的专有高度，因为我们数了 9、10、11、12。

32
00:02:09,192 --> 00:02:14,500
实际上，我们并没有一路走到 13，也就是 y+height。

33
00:02:14,500 --> 00:02:18,320
我们要把这个数字叫做 i，然后对于每个值，我们

34
00:02:18,320 --> 00:02:24,370
要画一条长度为 8 的水平线，从坐标 (7, i) 开始。

35
00:02:24,370 --> 00:02:26,580
我们为什么要画一条长度为 8 的线？

36
00:02:26,580 --> 00:02:29,040
那是因为它是矩形的宽度。

37
00:02:29,040 --> 00:02:31,050
因此，我们可以继续调用这个宽度。

38
00:02:33,720 --> 00:02:36,100
这样，我们将能够使用我们的算法来处理

39
00:02:36,100 --> 00:02:38,490
不同大小的矩形。

40
00:02:38,490 --> 00:02:41,140
为什么我们要从 x 位置 7 开始？

41
00:02:41,140 --> 00:02:43,710
因为那是我们的起点 x 坐标。

42
00:02:44,810 --> 00:02:46,480
所以我们可以称之为 x。

43
00:02:47,520 --> 00:02:51,450
这样我们的算法就可以容纳 x 的所有值。

44
00:02:51,450 --> 00:02:53,510
现在这部分看起来有点复杂。

45
00:02:53,510 --> 00:02:58,403
我们将画一条长度为宽度的水平线，从 (x, i) 开始。

46
00:02:58,403 --> 00:03:02,130
这个步骤看起来有点复杂实际上是可以的。

47
00:03:02,130 --> 00:03:04,730
我们称之为不同的编程问题。

48
00:03:04,730 --> 00:03:07,761
我们假设我们要么已经知道如何

49
00:03:07,761 --> 00:03:11,545
画一条长度为 (x, i) 的水平线。

50
00:03:11,545 --> 00:03:14,565
或者我们可以把它当作自己的编程问题来解决，

51
00:03:14,565 --> 00:03:17,495
从第 1 步到第 4 步重新开始。

52
00:03:17,495 --> 00:03:21,285
在本练习中，我们假设我们知道如何执行此步骤。

53
00:03:22,497 --> 00:03:25,697
我们要做的最后一件事就是增加一点精度，

54
00:03:25,697 --> 00:03:28,307
因为我们希望线条是蓝色的。

55
00:03:28,307 --> 00:03:32,847
因此，我们的算法需要特别说明我们正在画一条长度为

56
00:03:32,847 --> 00:03:36,413
宽度的蓝线，从位置 (x, i) 开始。

57
00:03:36,413 --> 00:03:39,167
亲自测试这个算法。

58
00:03:39,167 --> 00:03:42,517
给自己一个

59
00:03:42,517 --> 00:03:46,820
你想要测试的 x、y、宽度和高度的值，看看这是否适合你。

60
00:03:46,820 --> 00:03:49,869
最后一点，x、y、宽度和

61
00:03:49,869 --> 00:03:53,230
高度的某些值会导致你画出网格。

62
00:03:53,230 --> 00:03:56,484
在这种情况下，我们将假设没有发生任何特别

63
00:03:56,484 --> 00:04:00,340
的事情，并且对此不采取任何措施是理想的行为。

64
00:04:00,340 --> 00:04:03,190
稍后我们将探讨以

65
00:04:03,190 --> 00:04:05,850
更复杂的方式处理错误和极端情况的方法。