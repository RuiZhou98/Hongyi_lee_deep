1
00:00:03,293 --> 00:00:05,890
你好，欢迎学习编程基础知识，

2
00:00:05,890 --> 00:00:08,870
这是 C 语言编程入门的第一门课程。

3
00:00:08,870 --> 00:00:13,580
我是 Drew Hilton，我希望你已经准备好学习很多关于编程的知识。

4
00:00:13,580 --> 00:00:16,890
>> 我是 Anne Bracy，我也想欢迎你参加这门课程和

5
00:00:16,890 --> 00:00:18,430
专业化课程。

6
00:00:18,430 --> 00:00:22,130
我很高兴你有机会来和我们一起学习编程。

7
00:00:22,130 --> 00:00:23,631
>> 而且我是 Genevieve Lipp。

8
00:00:23,631 --> 00:00:28,263
我从 Drew an

9
00:00:28,263 --> 00:00:32,880
d Ann 的书中学会了 C 编程，这个专业就是以此为基础的，可以直接告诉你这是一种很好的学习方式。

10
00:00:32,880 --> 00:00:35,570
你不需要任何预先的编程背景，

11
00:00:35,570 --> 00:00:39,380
只需要渴望学习和对思考问题的兴奋。

12
00:00:40,675 --> 00:00:42,100
>> 正如 Genevieve 刚才提到的那样，

13
00:00:42,100 --> 00:00:45,350
如果你不熟悉编程，那么这个专业非常棒。

14
00:00:45,350 --> 00:00:48,730
你可能出于各种各样的原因考虑学习。

15
00:00:48,730 --> 00:00:52,172
也许你想成为一名专业的软件开发人员，如果是的话，

16
00:00:52,172 --> 00:00:53,838
这是一个很好的起点。

17
00:00:53,838 --> 00:00:57,849
我们将建立扎实的基础知识，以便在 C 语言和

18
00:00:57,849 --> 00:00:59,740
任何其他语言中都能很好地为你服务。

19
00:00:59,740 --> 00:01:02,568
>> 或者，也许你想在其他学科中使用编程技能。

20
00:01:02,568 --> 00:01:04,359
我认识很多社会科学家和

21
00:01:04,359 --> 00:01:07,408
自然科学家，他们发现编程是必要的，

22
00:01:07,408 --> 00:01:11,940
以分析他们所拥有的数据来探索各自领域的问题。

23
00:01:11,940 --> 00:01:14,850
>> 你们当中有些人可能已经上了入门课程，并

24
00:01:14,850 --> 00:01:16,860
希望扩展自己的技能。

25
00:01:16,860 --> 00:01:20,540
这可能是一个很好的机会，既可以从扎实

26
00:01:20,540 --> 00:01:23,660
的基础知识中培养编程技能，又可以学习一门新语言。

27
00:01:23,660 --> 00:01:26,700
>> 选择这个专业的另一个重要原因是，如果你正在上

28
00:01:26,700 --> 00:01:30,140
计算机组织课，无论是在Coursera上还

29
00:01:30,140 --> 00:01:33,960
是在学校里，并且没有C编程背景可以脱颖而出。

30
00:01:33,960 --> 00:01:38,160
这个专业化是快速了解这些话题的好方法。

31
00:01:38,160 --> 00:01:41,361
>> 那么我们要教你的方式有什么特别之处呢？

32
00:01:41,361 --> 00:01:43,740
我们将从头开始。

33
00:01:43,740 --> 00:01:47,670
许多编程课程都假设你可以通过

34
00:01:47,670 --> 00:01:49,670
看几个例子来弄清楚如何编写代码。

35
00:01:49,670 --> 00:01:50,650
我们不会那样做。

36
00:01:51,710 --> 00:01:52,227
>> 取而代之的是，

37
00:01:52,227 --> 00:01:56,370
我们将教你一种解决编程问题的分步方法。

38
00:01:56,370 --> 00:02:00,920
这种七步方法是解决任何编程问题的好方法。

39
00:02:00,920 --> 00:02:04,280
从你将在本课程中用作练习的小型，

40
00:02:04,280 --> 00:02:08,450
到你将在现实生活中使用的复杂的大型。

41
00:02:08,450 --> 00:02:12,120
>> 我们还将教你如何阅读代码以及如何编写代码。

42
00:02:12,120 --> 00:02:14,910
毕竟，如果你不会读书，你怎么能写呢？

43
00:02:14,910 --> 00:02:17,527
对于我们教给你的每段语法，

44
00:02:17,527 --> 00:02:22,480
我们还将教你语义，代码到底是做什么的。

45
00:02:22,480 --> 00:02:23,850
对于你编写的任何代码，

46
00:02:23,850 --> 00:02:29,260
你都可以手动执行它，准确地说出每行的作用。

47
00:02:29,260 --> 00:02:33,030
>> 这与没有魔法的原则并驾齐驱。

48
00:02:33,030 --> 00:02:36,890
我们绝不会仅仅因为而叫你写作或做某件事。

49
00:02:36,890 --> 00:02:40,681
相反，我们希望您了解编程中的所有内容都与明

50
00:02:40,681 --> 00:02:44,846
确定义的规则有关，您可以理解和遵循这些规则，甚至可以自己执行这些规则。

51
00:02:44,846 --> 00:02:47,510
>> 那么，我们要从这里走向何方？

52
00:02:47,510 --> 00:02:50,560
本课程的其余部分全部是关于计算思维的。

53
00:02:50,560 --> 00:02:52,976
你将学习很多重要的概念，

54
00:02:52,976 --> 00:02:55,521
如何设计算法来解决问题，

55
00:02:55,521 --> 00:03:00,820
如何手动执行一段代码，以及 “一切都是数字原理”。

56
00:03:00,820 --> 00:03:06,470
这将为你在课程 2 中开始用 C 编写程序奠定基础。

57
00:03:06,470 --> 00:03:09,430
>> 说到课程 2，你将在那里学习使用

58
00:03:09,430 --> 00:03:12,810
对开发代码很重要的各种工具。

59
00:03:12,810 --> 00:03:16,481
你将学习一些东西，比如如何将你的代码变成

60
00:03:16,481 --> 00:03:19,038
计算机可以运行的实际程序，这称为编译。

61
00:03:19,038 --> 00:03:22,303
您还将学习如何测试和调试、发现和

62
00:03:22,303 --> 00:03:24,130
修复程序中的错误。

63
00:03:25,360 --> 00:03:30,260
>> 在课程 3 中，您将学习如何使用指针、

64
00:03:30,260 --> 00:03:31,970
数组和字符串存储更复杂的数据。

65
00:03:31,970 --> 00:03:35,340
如果你现在不知道这些是什么没问题，我们会在

66
00:03:35,340 --> 00:03:36,106
到达那里时解释一下。

67
00:03:36,106 --> 00:03:40,125
>> 在课程 4 中，我们将学习如何与用户和

68
00:03:40,125 --> 00:03:43,885
系统交互，以及在

69
00:03:43,885 --> 00:03:46,855
您事先不知道需要处理多少数据时如何动态分配内存。

70
00:03:48,315 --> 00:03:49,865
所以，让我们开始吧。