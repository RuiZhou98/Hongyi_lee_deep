1
00:00:03,293 --> 00:00:05,890
Hello and
welcome to programming fundamentals,

2
00:00:05,890 --> 00:00:08,870
the first course in an introduction
to programming in C.

3
00:00:08,870 --> 00:00:13,580
I'm Drew Hilton and I hope you're ready
to learn a lot about programming.

4
00:00:13,580 --> 00:00:16,890
>> And I'm Anne Bracy and I would like
also to welcome you to this course and

5
00:00:16,890 --> 00:00:18,430
specialization.

6
00:00:18,430 --> 00:00:22,130
I'm excited that you have the chance
to come learn to program with us.

7
00:00:22,130 --> 00:00:23,631
>> And I'm Genevieve Lipp.

8
00:00:23,631 --> 00:00:28,263
I learned to program in C from Drew and
Ann's book that this specialization is

9
00:00:28,263 --> 00:00:32,880
based on, and can tell you first hand
that it is a great way to learn.

10
00:00:32,880 --> 00:00:35,570
You don't need any prior
background in programming,

11
00:00:35,570 --> 00:00:39,380
just an eagerness to learn and excitement
about thinking through problems.

12
00:00:40,675 --> 00:00:42,100
>> As Genevieve just mentioned,

13
00:00:42,100 --> 00:00:45,350
this specialization is great
if you're new to programming.

14
00:00:45,350 --> 00:00:48,730
You might be thinking bout learning for
wide a variety of reasons.

15
00:00:48,730 --> 00:00:52,172
Maybe you want to become a professional
software developer, if so

16
00:00:52,172 --> 00:00:53,838
this is a great starting point.

17
00:00:53,838 --> 00:00:57,849
We're going to build solid fundamentals
that will server you well in both C and

18
00:00:57,849 --> 00:00:59,740
any other language.

19
00:00:59,740 --> 00:01:02,568
>> Or maybe you want programming skills
to use in some other discipline.

20
00:01:02,568 --> 00:01:04,359
I know a lot of social scientists and

21
00:01:04,359 --> 00:01:07,408
natural scientists who have
found programming necessary,

22
00:01:07,408 --> 00:01:11,940
to analyze the data that they have to
explore the problems in their field.

23
00:01:11,940 --> 00:01:14,850
>> Some of you may have already
taken an intro course and

24
00:01:14,850 --> 00:01:16,860
be looking to expand your skills.

25
00:01:16,860 --> 00:01:20,540
This can be a great chance to both build
your programming skills from solid

26
00:01:20,540 --> 00:01:23,660
fundamentals And to learn a new language.

27
00:01:23,660 --> 00:01:26,700
>> Another great reason to take this
specialization is if you were taking

28
00:01:26,700 --> 00:01:30,140
a computer organization class,
either on Coursera, or

29
00:01:30,140 --> 00:01:33,960
in school, and don't have the C
programming background to excel.

30
00:01:33,960 --> 00:01:38,160
This specialization is a great way
to come up to speed on those topics.

31
00:01:38,160 --> 00:01:41,361
>> So what's special about the way
that we're going to teach you?

32
00:01:41,361 --> 00:01:43,740
We're going to start
from the very beginning.

33
00:01:43,740 --> 00:01:47,670
A lot of programming courses assume you
can just figure out how to write code from

34
00:01:47,670 --> 00:01:49,670
seeing a few examples.

35
00:01:49,670 --> 00:01:50,650
We aren't going to do that.

36
00:01:51,710 --> 00:01:52,227
>> Instead,

37
00:01:52,227 --> 00:01:56,370
we're going to teach you a step-by-step
approach to solve programming problems.

38
00:01:56,370 --> 00:02:00,920
This seven step approach is a great
way to tackle any programming problem.

39
00:02:00,920 --> 00:02:04,280
From smaller ones that you'll
use as practice in this course,

40
00:02:04,280 --> 00:02:08,450
to large complicated ones that you
will use in real life situations.

41
00:02:08,450 --> 00:02:12,120
>> We're also going to teach you how to
read code as well as how to write it.

42
00:02:12,120 --> 00:02:14,910
After all,
how can you write if you can't read?

43
00:02:14,910 --> 00:02:17,527
For every piece of syntax
that we teach you,

44
00:02:17,527 --> 00:02:22,480
we are also going to teach you
the semantics, what exactly the code does.

45
00:02:22,480 --> 00:02:23,850
For any code you write,

46
00:02:23,850 --> 00:02:29,260
you will be able to execute it by hand,
saying exactly what every line does.

47
00:02:29,260 --> 00:02:33,030
>> Which goes hand in hand with
the principle of no magic.

48
00:02:33,030 --> 00:02:36,890
We're never going to tell you to write or
do a thing just because.

49
00:02:36,890 --> 00:02:40,681
Instead, we want you to learn that
everything in programming is about well

50
00:02:40,681 --> 00:02:44,846
defined rules, which you can understand
and follow, or even execute yourself.

51
00:02:44,846 --> 00:02:47,510
>> So, where do we go from here?

52
00:02:47,510 --> 00:02:50,560
The rest of this course is all
about computational thinking.

53
00:02:50,560 --> 00:02:52,976
You'll learn a lot of important concepts,

54
00:02:52,976 --> 00:02:55,521
how to design an algorithm
to solve a problem,

55
00:02:55,521 --> 00:03:00,820
how to execute a piece of code by hand,
and the, Everything is a Number Principle.

56
00:03:00,820 --> 00:03:06,470
These will lay the foundation for you to
start writing programs in C in Course 2.

57
00:03:06,470 --> 00:03:09,430
>> Speaking of Course 2,
that is where you will learn to use

58
00:03:09,430 --> 00:03:12,810
a variety of tools that
are important to develop your code.

59
00:03:12,810 --> 00:03:16,481
You'll learn things like how to turn
your code into an actual program that

60
00:03:16,481 --> 00:03:19,038
the computer can run,
which is called compiling.

61
00:03:19,038 --> 00:03:22,303
You'll also learn about testing and
debugging, finding and

62
00:03:22,303 --> 00:03:24,130
fixing mistakes in your program.

63
00:03:25,360 --> 00:03:30,260
>> In Course 3, you will learn about ways
to store more complex data using pointers,

64
00:03:30,260 --> 00:03:31,970
arrays and strings.

65
00:03:31,970 --> 00:03:35,340
If you don't know what these are now
no problem we'll explain them

66
00:03:35,340 --> 00:03:36,106
when we get there.

67
00:03:36,106 --> 00:03:40,125
>> And in Course 4 we'll learn
how to interact with the user and

68
00:03:40,125 --> 00:03:43,885
the system, as well as how to
dynamically allocate memory

69
00:03:43,885 --> 00:03:46,855
when you don't know in advance how
much data you have to work with.

70
00:03:48,315 --> 00:03:49,865
So, let's get started.