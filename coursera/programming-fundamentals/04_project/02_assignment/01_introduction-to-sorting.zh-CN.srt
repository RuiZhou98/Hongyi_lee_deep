1
00:00:02,590 --> 00:00:07,805
在本课程中，你的最后一个项目将是编写一个排序算法。

2
00:00:07,805 --> 00:00:10,730
这是一种将数字序列作为

3
00:00:10,730 --> 00:00:14,715
输入的算法，并将它们从大到小按升序排列。

4
00:00:14,715 --> 00:00:17,660
例如，如果您有以下输入数据，则

5
00:00:17,660 --> 00:00:19,850
需要您的算法重新排列

6
00:00:19,850 --> 00:00:23,405
它们，以便获得这样的序列：相同的数字，

7
00:00:23,405 --> 00:00:25,805
但从小到大排序。

8
00:00:25,805 --> 00:00:27,500
当然，我们在这里所做的，

9
00:00:27,500 --> 00:00:31,920
只是用一种很难一概而论的方式同时对它们进行了重新洗牌。

10
00:00:31,920 --> 00:00:34,250
您将需要考虑一种更逐步的方法

11
00:00:34,250 --> 00:00:37,390
来对任何数字序列的数据进行排序。

12
00:00:37,390 --> 00:00:40,185
好吧，那为什么要考虑排序呢？

13
00:00:40,185 --> 00:00:41,600
好吧，首先，

14
00:00:41,600 --> 00:00:46,180
排序是计算机科学中一种重要且无处不在的算法。

15
00:00:46,180 --> 00:00:50,570
例如，我的电子邮件客户端允许我按主题

16
00:00:50,570 --> 00:00:52,910
、日期或其他各种标准对邮件进行排序。

17
00:00:52,910 --> 00:00:55,595
对数据进行排序可以更轻松地找到所需的内容。

18
00:00:55,595 --> 00:00:57,200
当我在 Facebook 上

19
00:00:57,200 --> 00:00:59,240
时，有一份热门故事清单。

20
00:00:59,240 --> 00:01:02,810
如何从所有故事列表中获得最受欢迎的故事？

21
00:01:02,810 --> 00:01:04,835
你可以按受欢迎程度进行排序，

22
00:01:04,835 --> 00:01:07,675
然后从列表中选出排名靠前的项目。

23
00:01:07,675 --> 00:01:10,685
同样，如果我在谷歌上搜索一些东西，

24
00:01:10,685 --> 00:01:13,460
它会有许多可能与我的查询相匹配的搜索

25
00:01:15,890 --> 00:01:18,230
结果，但会根据其排名对它们

26
00:01:18,230 --> 00:01:21,350
进行排序，将最有可能最好的结果放在它显示的结果的顶部。

27
00:01:21,350 --> 00:01:25,285
当然，还有很多其他的例子。

28
00:01:25,285 --> 00:01:28,180
我们选择排序供你处理的另一个原因

29
00:01:28,180 --> 00:01:31,170
是，有许多不同的正确方法可以做到这一点。

30
00:01:31,170 --> 00:01:34,955
得知许多问题都有很多不同的解决方案，这真是太好了。

31
00:01:34,955 --> 00:01:37,405
当你同行评审其他人的解决方案

32
00:01:37,405 --> 00:01:41,305
时，你有望看到与你想象的不同的方法。

33
00:01:41,305 --> 00:01:45,365
最后，很容易验证答案是否正确。

34
00:01:45,365 --> 00:01:47,740
当你同行评审别人的算法时，

35
00:01:47,740 --> 00:01:50,170
你可以通过查看他们是否

36
00:01:50,170 --> 00:01:54,545
按正确的顺序排列数据，从而轻松检查他们对某些输入数据的答案是否正确。

37
00:01:54,545 --> 00:01:59,930
因此，现在让我们使用七个步骤并编写一个排序算法。