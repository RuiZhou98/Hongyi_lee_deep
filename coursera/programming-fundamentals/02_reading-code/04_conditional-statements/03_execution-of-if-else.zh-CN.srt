1
00:00:02,590 --> 00:00:07,220
现在，让我们看看如何执行包含条件语句的代码。

2
00:00:07,220 --> 00:00:12,080
在这里，我们有一个函数 f，它有一些 if 和 if else 语句。

3
00:00:12,080 --> 00:00:16,395
与往常一样，我们的程序从 main 的开头开始执行。

4
00:00:16,395 --> 00:00:19,225
第一条语句声明了一个变量 a，

5
00:00:19,225 --> 00:00:21,800
所以我们为它做了一个方框。

6
00:00:21,800 --> 00:00:24,008
尽管此语句初始化 a，

7
00:00:24,008 --> 00:00:27,565
但计算该值需要几个步骤，

8
00:00:27,565 --> 00:00:30,635
因此我们要将 a 的值留作问号，

9
00:00:30,635 --> 00:00:34,745
直到我们计算 f 的值为 3、4。

10
00:00:34,745 --> 00:00:36,980
为了评估对 f 的调用，

11
00:00:36,980 --> 00:00:41,085
我们制作一个传递参数值的帧。

12
00:00:41,085 --> 00:00:46,940
我们知道在哪里返回并将执行箭头移到 f 的第一行。

13
00:00:46,940 --> 00:00:53,650
下一行代码是条件表达式 x 小于 y 的 if 语句。

14
00:00:53,650 --> 00:00:58,524
我们计算该表达式后发现小于 4 的三个为真，

15
00:00:58,524 --> 00:01:01,010
因此我们将执行箭头移到

16
00:01:01,010 --> 00:01:05,270
此 if 语句的 then 子句中并继续执行。

17
00:01:05,270 --> 00:01:07,775
下一个语句是调用 print f

18
00:01:07,775 --> 00:01:09,990
，你很熟悉。

19
00:01:09,990 --> 00:01:13,040
我们在输出中写入 x 小于 y。

20
00:01:13,040 --> 00:01:16,215
接下来，我们返回 y 加 x。

21
00:01:16,215 --> 00:01:20,180
这遵循的规则与你已经学过的 return 语句规则相同。

22
00:01:20,180 --> 00:01:24,795
我们评估表达式以得到返回值，即七。

23
00:01:24,795 --> 00:01:27,575
这就是函数调用的计算结果。

24
00:01:27,575 --> 00:01:29,638
现在，我们回到调用者身边，

25
00:01:29,638 --> 00:01:33,180
销毁 f 的帧。现在，

26
00:01:33,180 --> 00:01:35,880
我们已经准备好完成初始化 a 了，因为我们知道

27
00:01:35,880 --> 00:01:39,090
f 的调用计算结果为 7。

28
00:01:39,090 --> 00:01:42,330
所以 a 现在是七个。

29
00:01:42,330 --> 00:01:46,390
现在，我们已经为 main 中的下一行代码做好了准备。

30
00:01:46,390 --> 00:01:49,470
我们为 b 做一个方框然后调用 f，

31
00:01:49,470 --> 00:01:52,480
传入七和五。

32
00:01:52,480 --> 00:01:55,215
我们再次想评估条件，

33
00:01:55,215 --> 00:01:57,255
x 小于 y。

34
00:01:57,255 --> 00:02:01,050
但是，现在 x 是七，y 是五，

35
00:02:01,050 --> 00:02:04,380
所以 x 小于 5 是假的。

36
00:02:04,380 --> 00:02:06,450
我们找到

37
00:02:06,450 --> 00:02:11,385
这个 if 语句的右大括号，看到 if 语句有一个 else 子句。

38
00:02:11,385 --> 00:02:14,160
因此，我们将执行箭头移到

39
00:02:14,160 --> 00:02:18,150
else 子句的开头，然后从那里继续执行。

40
00:02:18,150 --> 00:02:21,135
首先，我们执行打印语句，

41
00:02:21,135 --> 00:02:24,480
然后到达另一个 if 语句。

42
00:02:24,480 --> 00:02:27,285
这个 if 语句嵌套在 else

43
00:02:27,285 --> 00:02:30,765
中，但这并不影响我们如何评估它的规则。

44
00:02:30,765 --> 00:02:33,405
我们看到条件表达式为 false，

45
00:02:33,405 --> 00:02:37,770
因此我们寻找 if 语句的右大括号。

46
00:02:37,770 --> 00:02:39,635
没有 else 子句，

47
00:02:39,635 --> 00:02:42,440
因此我们立即将执行箭头移到右

48
00:02:42,440 --> 00:02:46,160
大括号上方，然后继续执行。el@@

49
00:02:46,160 --> 00:02:48,875
se 子句中没有更多的语句，

50
00:02:48,875 --> 00:02:54,050
所以我们将执行箭头移到 else 子句之外并继续前进。

51
00:02:54,050 --> 00:02:58,730
现在，我们有一个 return 语句，因此我们计算表达式 x 减二，

52
00:02:58,730 --> 00:03:01,130
发现返回值为 5，

53
00:03:01,130 --> 00:03:04,495
该值将返回到我们注意到的位置。

54
00:03:04,495 --> 00:03:07,558
我们返回主节点并销毁 f 的框架，

55
00:03:07,558 --> 00:03:11,000
然后我们完成赋值语句。

56
00:03:11,000 --> 00:03:13,858
现在，我们在 main 的 return 语句处，

57
00:03:13,858 --> 00:03:17,000
我们执行该语句，然后退出程序。