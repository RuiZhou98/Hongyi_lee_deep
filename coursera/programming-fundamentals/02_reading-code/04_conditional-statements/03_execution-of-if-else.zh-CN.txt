现在，让我们看看如何执行包含条件语句的代码。 在这里，我们有一个函数 f，它有一些 if 和 if else 语句。 与往常一样，我们的程序从 main 的开头开始执行。 第一条语句声明了一个变量 a， 所以我们为它做了一个方框。 尽管此语句初始化 a， 但计算该值需要几个步骤， 因此我们要将 a 的值留作问号， 直到我们计算 f 的值为 3、4。 为了评估对 f 的调用， 我们制作一个传递参数值的帧。 我们知道在哪里返回并将执行箭头移到 f 的第一行。 下一行代码是条件表达式 x 小于 y 的 if 语句。 我们计算该表达式后发现小于 4 的三个为真， 因此我们将执行箭头移到 此 if 语句的 then 子句中并继续执行。 下一个语句是调用 print f ，你很熟悉。 我们在输出中写入 x 小于 y。 接下来，我们返回 y 加 x。 这遵循的规则与你已经学过的 return 语句规则相同。 我们评估表达式以得到返回值，即七。 这就是函数调用的计算结果。 现在，我们回到调用者身边， 销毁 f 的帧。现在， 我们已经准备好完成初始化 a 了，因为我们知道 f 的调用计算结果为 7。 所以 a 现在是七个。 现在，我们已经为 main 中的下一行代码做好了准备。 我们为 b 做一个方框然后调用 f， 传入七和五。 我们再次想评估条件， x 小于 y。 但是，现在 x 是七，y 是五， 所以 x 小于 5 是假的。 我们找到 这个 if 语句的右大括号，看到 if 语句有一个 else 子句。 因此，我们将执行箭头移到 else 子句的开头，然后从那里继续执行。 首先，我们执行打印语句， 然后到达另一个 if 语句。 这个 if 语句嵌套在 else 中，但这并不影响我们如何评估它的规则。 我们看到条件表达式为 false， 因此我们寻找 if 语句的右大括号。 没有 else 子句， 因此我们立即将执行箭头移到右 大括号上方，然后继续执行。el@@ se 子句中没有更多的语句， 所以我们将执行箭头移到 else 子句之外并继续前进。 现在，我们有一个 return 语句，因此我们计算表达式 x 减二， 发现返回值为 5， 该值将返回到我们注意到的位置。 我们返回主节点并销毁 f 的框架， 然后我们完成赋值语句。 现在，我们在 main 的 return 语句处， 我们执行该语句，然后退出程序。