在本模块中，您将学习阅读代码并手动执行代码。当@@ 你可以上一堂简短的语法课然后 开始打字时，你为什么要这样做？ 想一想你第一次学习书面语言是什么时候。 你在读书之前学会写作了吗？ 可能不是，识别单词或句子并 附上含义比表达自己的含义要容易得多。 你可能拼错了一个单词或者 犯了一个语法错误，表达了一个你可以很好地阅读的想法。 编程就是这样，你需要 先阅读才能理解并准确理解代码是如何执行的，然后才能自己写出好的代码。 它也更容易，读得好可以帮助你减少边走边犯的错误， 还可以帮助你在代码做一些你没想到的事情时进行故障排除。 我的背景是机械工程，在 我的本科课程中，我们使用 MATLAB 来完成计算任务。 尽管有很好的指导和 周到的练习，但许多学生，包括我自己，还是 会花几个小时调试代码，主要是通过猜测和检查。 我从来没有画过我以为正在发生的事情， 甚至从未用手执行过一行代码。 而且我可能做不到， 因为有几件事我没有完全理解。 在教学中，我看到学生会犯类似的错误。 找出错误消息的原因是一次寻宝，这可能 比最初花在编写代码上的时间长得多。 通常，我们知道我们想要一段代码做什么，甚至可能知道 它在做什么，但是除非你能确定，否则你无法对自己的结果充满信心。 而且你花在调试上的时间可能会比你想要的要多。 以下是我们将在本课程后面讨论的函数的算法。 你可以在这里看到，算法的每个步骤 都会改变程序的状态。 以下是在代码中实现的相同步骤。 如果您还不知道如何阅读这篇文章，请不要担心。 关键是代码需要以与 算法完全相同的方式更改程序。 如果代码做了不同的事情， 我们需要对其进行更改以匹配算法。 这就是为什么学习阅读代码对编写代码如此重要的原因。 在本模块中，您将学会理解语句的作用。 语言的语法或语法，以及语 句的语义或含义。 你还将学习如何跟踪程序的状态、你在哪里，以及 哪些函数可以看到哪些变量。 为此，您将学习如何 根据一组规则准确地描绘正在发生的事情。 一旦你能做到这些事情，编写代码就会变得更加容易。 而且，当你的代码确实没有达到预期的效果时， 你可以使用一组工具来调查你的程序，看看它在 做什么。