1
00:00:00,012 --> 00:00:03,790
[空白录音]。123

2
00:00:03,790 --> 00:00:08,030
让我们开始学习如何使用C语言中
最基础的语句来执行一段代码

3
00:00:08,030 --> 00:00:11,710
然后在此之上构建更复杂的语句

4
00:00:11,710 --> 00:00:14,610
在这里我们有两个变量声明

5
00:00:14,610 --> 00:00:18,550
一个整数变量x
和另一个整数变量y

6
00:00:18,550 --> 00:00:22,700
如果我们执行第一句语句
我们会创建一个标记为x的方框

7
00:00:22,700 --> 00:00:24,890
变量x尚未被初始化 所以

8
00:00:24,890 --> 00:00:28,950
让我们在方框里写一个? 来暂时代表它的值

9
00:00:28,950 --> 00:00:30,762
如果我们执行第二条语句

10
00:00:30,762 --> 00:00:35,870
我们会创建另一个标记为y的方框
它也没有被初始化

11
00:00:35,870 --> 00:00:37,650
没有被初始化的变量很不好

12
00:00:37,650 --> 00:00:41,410
因为他们会导致你的代码中
出现难以排查和修复的bug

13
00:00:43,170 --> 00:00:47,430
现在来看另一个例子
它不仅声明且初始化变量

14
00:00:47,430 --> 00:00:51,080
这里的第一句语句声明了一个变量x

15
00:00:51,080 --> 00:00:53,990
执行它的结果和之前的例子中一模一样

16
00:00:53,990 --> 00:00:57,680
我们给变量x创建了一个方框
并且方框中包含一个未知的值

17
00:00:57,680 --> 00:01:01,480
但在下一句代码中 我们把4赋值给x

18
00:01:01,480 --> 00:01:05,270
执行这行代码会把数值4放在方框x里

19
00:01:05,270 --> 00:01:09,370
现在x已经被初始化了
我们知道它值为4

20
00:01:09,370 --> 00:01:12,020
下一行代码则在同一语句中

21
00:01:12,020 --> 00:01:15,530
同时包含了声明和赋值

22
00:01:15,530 --> 00:01:21,250
执行它将会给y创建一个方框
并把数值6放在方框里

23
00:01:23,490 --> 00:01:28,830
当然 除非你用到这些变量被赋予的值
否则它们毫无用处

24
00:01:28,830 --> 00:01:32,350
这里的代码声明变量x并初始化它的值为4

25
00:01:32,350 --> 00:01:35,530
让我们来执行这句语句

26
00:01:35,530 --> 00:01:39,662
接下来的语句声明y 并且把它的值初始化为x+2

27
00:01:39,662 --> 00:01:43,490
为了执行这句语句 我们需要计算等号右边的表达式

28
00:01:43,490 --> 00:01:49,100
x的值为4 所以x+2的值为6

29
00:01:49,100 --> 00:01:52,430
我们给y创建一个方框并且把数值6放进去

30
00:01:52,430 --> 00:01:58,540
这里的最后一行语句创建一个变量z
并把它初始化为y-x

31
00:01:58,540 --> 00:02:02,800
你可能已经猜到了
这行代码用y的值6

32
00:02:02,800 --> 00:02:07,650
并减去x的值4 得到结果是2

33
00:02:07,650 --> 00:02:12,250
接下来 给z创建一个方框
并且初始化它的值为2

34
00:02:12,250 --> 00:02:16,980
很好 现在你已经知道怎么执行变量声明

35
00:02:16,980 --> 00:02:18,080
和变量赋值的语句了