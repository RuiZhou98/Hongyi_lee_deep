1
00:00:00,012 --> 00:00:03,790
[BLANK AUDIO].

2
00:00:03,790 --> 00:00:08,030
We are going to start learning to execute
code with the most basic statements in

3
00:00:08,030 --> 00:00:11,710
C and build up to more complex
statements from there.

4
00:00:11,710 --> 00:00:14,610
Here we have two variable declarations,
one for

5
00:00:14,610 --> 00:00:18,550
int called x followed by one for
int called y.

6
00:00:18,550 --> 00:00:22,700
If we execute first statement,
we will create a box labeled x.

7
00:00:22,700 --> 00:00:24,890
The variable x is uninitialized, so

8
00:00:24,890 --> 00:00:28,950
we will place a question mark
in the box for its value.

9
00:00:28,950 --> 00:00:30,762
If we execute the second statement,

10
00:00:30,762 --> 00:00:35,870
we will create another box labeled
y which is also uninitialized.

11
00:00:35,870 --> 00:00:37,650
Uninitialized variables are bad,

12
00:00:37,650 --> 00:00:41,410
as they lead to bugs in your code
which may be hard to find and fix.

13
00:00:43,170 --> 00:00:47,430
Now let's look at another example
which initializes the variables.

14
00:00:47,430 --> 00:00:51,080
Here, the first statement
declares an int called x.

15
00:00:51,080 --> 00:00:53,990
Executing it behaves exactly as before.

16
00:00:53,990 --> 00:00:57,680
We have made a box for x,
which has an unknown value in it.

17
00:00:57,680 --> 00:01:01,480
However, the next line
of code assigns 4 to x.

18
00:01:01,480 --> 00:01:05,270
Executing this line puts
a 4 in the box for x.

19
00:01:05,270 --> 00:01:09,370
Now x is initialized and
we know that it has the value 4.

20
00:01:09,370 --> 00:01:12,020
The next line shows the declaration and

21
00:01:12,020 --> 00:01:15,530
initialization combined
in a single statement.

22
00:01:15,530 --> 00:01:21,250
Executing it both creates a box for
y and puts the value 6 in that box.

23
00:01:23,490 --> 00:01:28,830
Of course, variables are only useful if
you make use of the values that they have.

24
00:01:28,830 --> 00:01:32,350
Here, the code first declares x and
initializes it to a 4.

25
00:01:32,350 --> 00:01:35,530
Let us execute that statement.

26
00:01:35,530 --> 00:01:39,662
Next, it declares y and
initializes it to x + 2.

27
00:01:39,662 --> 00:01:43,490
To perform this statement, we must
evaluate the expression on the right-hand

28
00:01:43,490 --> 00:01:49,100
side of the equal sign,
x is 4, so x + 2 is 6.

29
00:01:49,100 --> 00:01:52,430
We create a box for y and put a 6 in it.

30
00:01:52,430 --> 00:01:58,540
The last statement creates a variable
z and initializes it to y- x.

31
00:01:58,540 --> 00:02:02,800
As you might expect, you would take
the value of y, which is 6 and

32
00:02:02,800 --> 00:02:07,650
the value of x which is 4 and
subtract them to get 2.

33
00:02:07,650 --> 00:02:12,250
You would then create a box for
z and initialize it to 2.

34
00:02:12,250 --> 00:02:16,980
Great, now you know how to execute
code with variable declarations and

35
00:02:16,980 --> 00:02:18,080
assignment statements.