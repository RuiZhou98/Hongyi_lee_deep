1
00:00:03,095 --> 00:00:07,055
在这个视频中 我们举例介绍如何用printf函数来

2
00:00:07,055 --> 00:00:09,090
把我们的结果输出打印到终端

3
00:00:09,090 --> 00:00:12,850
我们可以看到常用的main框架 和一个用于代表输出的框

4
00:00:12,850 --> 00:00:15,580
箭头指在main的开头

5
00:00:15,580 --> 00:00:19,296
我们先创建一个变量，并赋值42

6
00:00:19,296 --> 00:00:21,330
接下来 我们运行printf语句

7
00:00:22,410 --> 00:00:25,080
把字符串‘Hello World‘打印到终端

8
00:00:25,080 --> 00:00:29,424
它会直接打印这个字符串 没有任何其他指定格式

9
00:00:29,424 --> 00:00:31,940
我们的输出就是“Hello World“（你好世界）

10
00:00:31,940 --> 00:00:35,270
接下来的printf语句将打印字符串“a“

11
00:00:35,270 --> 00:00:38,353
注意这行代码会直接打印出字母a 因为字母a

12
00:00:38,353 --> 00:00:41,280
在引号的里面 它被当作一个字符串文本

13
00:00:41,280 --> 00:00:44,140
这和我们之前看到的变量a没有联系

14
00:00:44,140 --> 00:00:45,650
因此 我们的输出是a

15
00:00:47,200 --> 00:00:49,250
接下来的函数返回数值0 并退出main（）

16
00:00:50,370 --> 00:00:53,950
假设你想打印变量a所代表的数值 该怎么做呢？

17
00:00:55,040 --> 00:00:57,970
printf中的“f“代表”formatted“（格式化的）

18
00:00:57,970 --> 00:01:01,220
C语言中有一些格式指定符 可用于格式化输出

19
00:01:03,030 --> 00:01:09,268
在这个例子中 我们先创建和初始化整数a和b 分别对应42和7

20
00:01:09,268 --> 00:01:13,350
接下来我们运行一个带有格式说明符的printf语句

21
00:01:13,350 --> 00:01:15,381
在这个例子中 是%d

22
00:01:15,381 --> 00:01:18,870
%d将整数格式转化为十进制数字

23
00:01:18,870 --> 00:01:23,141
关于其他格式指定符号的知识我们稍后会学习到

24
00:01:23,141 --> 00:01:27,613
%d意味着printf语句会检查它对应的引数 来判断

25
00:01:27,613 --> 00:01:30,800
哪些整数需要被转化成十进制的格式

26
00:01:30,800 --> 00:01:34,740
在我们的例子中 引数是我们的变量a

27
00:01:34,740 --> 00:01:38,510
因此 运行这个语句会于%d在字符串的位置

28
00:01:38,510 --> 00:01:44,330
打印出数字42的十进制格式

29
00:01:44,330 --> 00:01:47,250
接下来运行的代码中含有两个%d符号

30
00:01:47,250 --> 00:01:52,380
第一个指向b 是字符串后面的第一个变量 代表数字7

31
00:01:52,380 --> 00:01:58,760
其中第二个指向a+b 像任何其他表达式一样运行计算

32
00:01:58,760 --> 00:02:02,850
所以运算42+7 结果是49

33
00:02:02,850 --> 00:02:07,368
因此，我们的输出b是7  a+b是49

34
00:02:07,368 --> 00:02:09,690
在最后 我们返回数值0 然后退出main环境

35
00:02:10,790 --> 00:02:14,590
另一个有关printf的重点是转义序列

36
00:02:14,590 --> 00:02:17,240
转义序列以一个反斜杠 \ 开始

37
00:02:17,240 --> 00:02:21,450
最常见的一个是 \n  代表新的一行

38
00:02:21,450 --> 00:02:24,090
现在看到的printf语句有两个 \n

39
00:02:24,090 --> 00:02:27,308
所以 运行时会在“Hello World”之后打印两行空行

40
00:02:27,308 --> 00:02:32,230
现在看到的语句创建一个变量b 并初始化数值为7

41
00:02:32,230 --> 00:02:37,200
此printf语句中有一个 \t  意思是tab键（选项卡键）

42
00:02:37,200 --> 00:02:38,740
用来整齐排列输出

43
00:02:38,740 --> 00:02:44,695
我们的输出是，“My answer is:  7"  然后返回0并退出main环境

44
00:02:45,808 --> 00:02:49,510
在本次简介中我们讲解了printf函数的一些用法

45
00:02:49,510 --> 00:02:51,260
你会在我们接下来的课程中更加深入地学习