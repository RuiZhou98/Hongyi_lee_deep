1
00:00:03,910 --> 00:00:04,599
In this video,

2
00:00:04,599 --> 00:00:08,640
we're going to demonstrate the execution
of code containing a whie loop.

3
00:00:08,640 --> 00:00:12,240
As always, we begin with the execution
arrow at the start of main.

4
00:00:12,240 --> 00:00:15,401
The first statement
declares a variable x and

5
00:00:15,401 --> 00:00:18,250
initializes it by calling g of 2 and 9.

6
00:00:18,250 --> 00:00:22,340
Inside of g,
we declare the variable total and

7
00:00:22,340 --> 00:00:26,980
initialize it to 0, and
then we reach a while loop.

8
00:00:26,980 --> 00:00:31,131
The conditional expression
of this while loop is

9
00:00:31,131 --> 00:00:35,279
a less than b which in this
case is 2 less than 9,

10
00:00:35,279 --> 00:00:39,850
which is true, so
we enter the body of the while loop.

11
00:00:39,850 --> 00:00:44,040
The next statement is total plus equals a.

12
00:00:44,040 --> 00:00:48,580
Remember that this is shorthand for
total equals total plus a, so

13
00:00:48,580 --> 00:00:52,290
total is going to equal
0 plus 2 which is 2.

14
00:00:52,290 --> 00:00:56,883
We assign 2 to total and
now we have a printf statement.

15
00:00:56,883 --> 00:00:59,011
A = %d, b = %d new line,

16
00:00:59,011 --> 00:01:04,011
where the first %d converts the value
of a to a decimal number and

17
00:01:04,011 --> 00:01:09,200
the second %d converts the value
of b to a decimal number.

18
00:01:09,200 --> 00:01:12,675
This prints out a = 2, b = 9.

19
00:01:12,675 --> 00:01:16,370
The next statement is a ++.

20
00:01:16,370 --> 00:01:22,351
Recall that this is shorthand for
a = a + 1, so we're going to do a = 3.

21
00:01:22,351 --> 00:01:27,060
B-- is shorthand for b = b- 1,

22
00:01:27,060 --> 00:01:30,100
so we're going to do b = 8.

23
00:01:30,100 --> 00:01:34,290
Now we've reached the close curly
brace of the while loop, so

24
00:01:34,290 --> 00:01:39,330
our execution arrow jumps right back up to
the top of the while loop, right before

25
00:01:39,330 --> 00:01:43,760
the conditional expression to determine
if we should enter the body of the loop.

26
00:01:43,760 --> 00:01:49,300
Evaluating the conditional expression
gives 3 less than 8 which is true,

27
00:01:49,300 --> 00:01:51,420
so we enter the body of
the while loop again.

28
00:01:52,500 --> 00:01:57,400
We do total +=a, 2+3 is 5,

29
00:01:57,400 --> 00:02:00,380
so we update total.

30
00:02:00,380 --> 00:02:05,132
Then, we're going to print a=3, b=8.

31
00:02:05,132 --> 00:02:09,721
We're going to increment a by 1 and
decrement b by 1.

32
00:02:09,721 --> 00:02:14,323
We reach the close curly brace at
the bottom of the while loop again, so

33
00:02:14,323 --> 00:02:16,050
we jump back up to the top.

34
00:02:16,050 --> 00:02:19,864
4 less than 7 is true, so
we enter the body of the while loop.

35
00:02:19,864 --> 00:02:26,034
Total += a, printf a=4,
b=7, increment a and

36
00:02:26,034 --> 00:02:31,268
decrement, jump back to
the top of the loop.

37
00:02:31,268 --> 00:02:35,540
5 less than 6 is true, so
we enter the body of the while loop.

38
00:02:35,540 --> 00:02:38,280
We execute each statement
in the loop as before.

39
00:02:40,010 --> 00:02:44,741
Now, however, when we get back
to the top of the loop and

40
00:02:44,741 --> 00:02:51,368
evaluate our conditional expression,
we find 6 less that 5 is false.

41
00:02:51,368 --> 00:02:54,770
Our execution arrow skips
over the body of the loop and

42
00:02:54,770 --> 00:02:58,310
begins executing statements
immediately after it.

43
00:02:58,310 --> 00:03:02,910
The value of total to return is 14,
so we return that to main

44
00:03:02,910 --> 00:03:08,056
leaving function g and returning
our execution arrow back in to main

45
00:03:08,056 --> 00:03:12,954
where we can now complete our
initialization of x with x = 14.

46
00:03:12,954 --> 00:03:16,195
We then continue executing
statements in main.

47
00:03:16,195 --> 00:03:21,730
We print out x = 14 and we return 0
exiting main and leaving the program.